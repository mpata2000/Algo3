Object subclass: #Celda	instanceVariableNames: 'tipoCelda'	classVariableNames: ''	package: 'Parcial-Modelo'!!Celda methodsFor: 'initialization' stamp: 'MartinPata 6/23/2021 15:55'!initialize 	tipoCelda := CeldaVacia new.! !!Celda methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 16:00'!ponerCirculo	tipoCelda := tipoCelda ponerCirculo.! !!Celda methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:57'!esCirculo	^tipoCelda esCirculo.! !!Celda methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:59'!esCruz	^ tipoCelda esCruz.! !!Celda methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:59'!ponerCruz	tipoCelda := tipoCelda ponerCruz.! !Object subclass: #CeldaCirculo	instanceVariableNames: 'vacio'	classVariableNames: ''	package: 'Parcial-Modelo'!!CeldaCirculo methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:47'!ponerCirculo	^CeldaOcupada new signal! !!CeldaCirculo methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:42'!esCruz	^false! !!CeldaCirculo methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:43'!esCirculo	^true.! !!CeldaCirculo methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:47'!ponerCruz	^CeldaOcupada new signal! !Object subclass: #CeldaCruz	instanceVariableNames: 'vacio'	classVariableNames: ''	package: 'Parcial-Modelo'!!CeldaCruz methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:47'!ponerCirculo	^CeldaOcupada new signal! !!CeldaCruz methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:42'!esCirculo	^false! !!CeldaCruz methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:43'!esCruz	^true.! !!CeldaCruz methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:47'!ponerCruz	^CeldaOcupada new signal! !Error subclass: #CeldaOcupada	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!Object subclass: #CeldaVacia	instanceVariableNames: 'vacio'	classVariableNames: ''	package: 'Parcial-Modelo'!!CeldaVacia methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:35'!esCruz	^false! !!CeldaVacia methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:42'!ponerCruz	^CeldaCruz new.! !!CeldaVacia methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/22/2021 20:00'!ponerCirculo	^CeldaCirculo new! !!CeldaVacia methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:36'!esCirculo	^false! !Object subclass: #ColeccionDeCeldas	instanceVariableNames: 'celdas'	classVariableNames: ''	package: 'Parcial-Modelo'!!ColeccionDeCeldas methodsFor: 'initialization' stamp: 'MartinPata 6/23/2021 15:03'!initialize		celdas := OrderedCollection new.! !!ColeccionDeCeldas methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:48'!hayGanador	^( (self ganoCirculo) | (self ganoCruz) ).! !!ColeccionDeCeldas methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:48'!ganoCirculo	^celdas allSatisfy: [ :c | c esCirculo ].! !!ColeccionDeCeldas methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/22/2021 21:16'!agregarCeldas: aCollection 	celdas addAll: aCollection.! !!ColeccionDeCeldas methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:48'!ganoCruz	^celdas allSatisfy: [ :c | c esCruz ].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ColeccionDeCeldas class	instanceVariableNames: ''!!ColeccionDeCeldas class methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:04'!con: aCollection 	| coleccion |	coleccion := ColeccionDeCeldas new.	coleccion agregarCeldas: aCollection.	^coleccion.! !Error subclass: #ErrorNoSePuedeColocarEnCeldaNoVacia	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!Object subclass: #JugadorCirculo	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!!JugadorCirculo methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:39'!proximoJugador	^JugadorCruz new.! !!JugadorCirculo methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:37'!esCirculo	^true! !!JugadorCirculo methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:38'!esCruz	^false.! !!JugadorCirculo methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:41'!ganador	^'Cruz'.! !Object subclass: #JugadorCruz	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!!JugadorCruz methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:36'!proximoJugador	^JugadorCirculo new.! !!JugadorCruz methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:36'!esCirculo	^false! !!JugadorCruz methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 16:05'!esCruz	^true! !!JugadorCruz methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 16:14'!ganador	^'Circulo'.! !Error subclass: #NoHayGanador	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!Error subclass: #PosicionFueraDeRango	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!Object subclass: #TaTeTi	instanceVariableNames: 'tablero filasDeTres proximo'	classVariableNames: ''	package: 'Parcial-Modelo'!!TaTeTi methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 16:28'!cruzColumna: nColumna Fila: nFila	(proximo esCirculo) ifTrue: [^TieneQueJugarCirculo new signal].	   ( self celdaColumna: nColumna Fila: nFila) ponerCruz .	proximo := proximo proximoJugador.! !!TaTeTi methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 16:29'!celdaColumna: nColumna Fila: nFila	 | posicionLineal |	(self hayGanador) ifTrue: [^YaHayGanador new signal].	  	( (nFila < 1) | (nFila > 3) | (nColumna < 1) | (nColumna > 3) ) 	ifTrue: [ ^PosicionFueraDeRango new signal ]. 		posicionLineal := nColumna + (3 * (nFila-1)). 	^tablero at: posicionLineal ! !!TaTeTi methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:49'!ganador	(self hayGanador) ifFalse: [ ^NoHayGanador new signal ].	^proximo ganador.! !!TaTeTi methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 15:32'!hayGanador	^filasDeTres anySatisfy: [ :f | f hayGanador ].! !!TaTeTi methodsFor: 'as yet unclassified' stamp: 'MartinPata 6/23/2021 16:29'!circuloColumna: nColumna Fila: nFila	(proximo esCruz) ifTrue: [ ^TieneQueJugarCruz new signal].		( self celdaColumna: nColumna Fila: nFila )ponerCirculo .	proximo := proximo proximoJugador.! !!TaTeTi methodsFor: 'initialization' stamp: 'MartinPata 6/23/2021 15:56'!initialize 	| celdas |	proximo := JugadorCruz new.	tablero := OrderedCollection new.	filasDeTres := OrderedCollection new.		1 to: 9 do: [:x |tablero add: (Celda new) ].		"Generacion de Columnas"	1 to: 3 do:[ :num | 		celdas := OrderedCollection new.		num to: (6+num) by: 3 do: [ :x | celdas add: (tablero at: x) ].		filasDeTres add: (ColeccionDeCeldas con: celdas) 	].	"Generacion de Filas"	1 to: 3 do: [ :num |		celdas := OrderedCollection new.		((num-1)*3+1) to: (num*3) do: [ :x | celdas add: (tablero at: x) ].		filasDeTres add: (ColeccionDeCeldas con: celdas)	].	"Diagonal ArribaAbajo"	celdas := OrderedCollection new.	1 to: 9 by:4 do: [ :x | celdas add: (tablero at: x) ].	filasDeTres add: (ColeccionDeCeldas con: celdas).	"Diagonal AbajoArriba"	celdas := OrderedCollection new.	7 to: 3 by: -2 do: [ :x | celdas add: (tablero at: x) ].	filasDeTres add: (ColeccionDeCeldas con: celdas).! !Error subclass: #TieneQueJugarCirculo	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!Error subclass: #TieneQueJugarCruz	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!Error subclass: #YaHayGanador	instanceVariableNames: ''	classVariableNames: ''	package: 'Parcial-Modelo'!